//==============================================================================
//==============================================================================
//
//          Copyright(c) 2007 Media5 Corporation ("Media5")
//
//  NOTICE:
//   This document contains information that is confidential and proprietary to
//   Media5.
//
//   Media5 reserves all rights to this document as well as to the Intellectual
//   Property of the document and the technology and know-how that it includes
//   and represents.
//
//   This publication cannot be reproduced, neither in whole nor in part, in any
//   form whatsoever without prior written approval by Media5.
//
//   Media5 reserves the right to revise this publication and make changes at
//   any time and without the obligation to notify any person and/or entity of
//   such revisions and/or changes.
//
//==============================================================================
//==============================================================================
#ifndef MXG_IRESOURCELISTDOCUMENT_H
//M5T_INTERNAL_USE_BEGIN
#define MXG_IRESOURCELISTDOCUMENT_H

//==============================================================================
//====  INCLUDES + FORWARD DECLARATIONS  =======================================
//==============================================================================

//-- M5T Global definitions.
//---------------------------
#ifndef MXG_MXCONFIG_H
#include "Config/MxConfig.h"
#endif

#ifndef MXG_CVECTOR_H
#include "Cap/CVector.h"
#endif

#ifndef MXG_IECOMUNKNOWN_H
#include "ECom/IEComUnknown.h"
#endif

MX_NAMESPACE_START(MXD_GNS)

//-- Forward Declarations.
//-------------------------
class CXmlElement;

//==============================================================================
//====  CONSTANTS + DEFINES  ===================================================
//==============================================================================

//==============================================================================
//====  NEW TYPE DEFINITIONS  ==================================================
//==============================================================================
MX_DECLARE_ECOM_IID(ISceResourceListsDocument);

//M5T_INTERNAL_USE_END

//==============================================================================
//== Class: ISceResourceListsDocument
//========================================
//<GROUP TID_PACKAGE_SCEXML_CLASSES>
//
// Summary:
//  This class represents a Resource List document.
//
// Description:
//  The Resource Lists Document implements a document that manages zero or more
//  CSceResourceList. The resource lists are used to manage zero or more resources
//  which are identified as URIs. The resource list document can be used to
//  represent a buddy list or a contact list.
//
//  This class keeps the resource lists information encoded in XML and it
//  implements the \<resource-lists\> element of RFC 4826, while the
//  CSceResourceList class implements all other sub-elements of \<resource-lists\>.
//
//  The CSceResourceListsDocument is used as a wrapper over an XML document to
//  make it easy for applications to set and access elements within this XML
//  tree. Users can always access the XML tree directly by using QueryIf for the
//  IXmlDocument interface, while most of the methods of this class and
//  CSceResourceList give direct access to the XML elements within this tree.
//
//  The MIME payload type associated with the XML that is generated by this
//  class is "application/resource-lists+xml".
//
// #XML API Concepts#
//   - The "Document" class is the class that holds the XML representation of
//     the data in the form of an IXmlDocument.
//   - "Helper" classe(s) may be availble which further help manage elements
//     from the XML document. These helper classes usually take a CXmlElement as
//     a reference in their constructor, and further API calls on this helper
//     class will use this XML element or children elements to access and set
//     the XML data. These "Helper" classes are lightweight and can be created
//     on the stack (as a local variable) when the need to access and set this
//     particular data arises.
//   - Any modification done to the data using either the "Document" API,
//     "Helper" API or directly using a CXmlElement associated with this XML
//     document is immediately reflected in the XML representation of this data.
//   - The ownership of *all* pointers returned by the "Document" class, its
//     helper classe(s) and the CXmlElement, is *never* given to the caller.
//     This means that when a pointer is returned to the caller, it should
//     immediately use it or copy its content if the data is to be used
//     asynchronously. Callers that perserve a pointer for any length of time
//     run the chance to see the pointer invalidated at any time another API
//     call is done on the "Document", on an associated "Helper" instance or on
//     an associated CXmlElement.
//   - Some of the APIs offered by the helper classes offer Set operations
//     that take a pointer to a value. Passing a NULL pointer is allowed as a
//     convenient way to remove the specified element from the document.
//   - Most of the APIs offered by the helper classes offer Get operations
//     that take a pointer to a variable as a parameter and return a pointer to
//     a CXmlElement. An application can pass a NULL pointer as a parameter in
//     order to just have access to the corresponding CXmlElement. Passing a
//     non-NULL pointer means that the interpretation of the data found in the
//     element is <B>copied</B> (<I>see const char* exception below</I>) into
//     the storage space the pointer points to, and the corresponding
//     CXmlElement is also returned. A NULL CXmlElement is returned when no
//     such element exist yet in the document.
//   - Special care must be taken for helper APIs that either return <C>const
//     char*</C> or that returns through parameters an <C>OUT const char*&</C>
//     or <C>OUT const char**</C>. In all three cases, the returned value is a
//     pointer to internal data held by a CXmlElement. There is no guarantee on
//     the length of time that this pointer will remain valid, as the value it
//     points to may be changed any time the corresponding resource list
//     document is changed. Applications wanting to keep the returned string
//     buffer for any length of time MUST copy the string into an application
//     managed buffer.
//     As an example, an application could copy the string into a CString
//     object if it needed to pass this information to some other thread for
//     further processing.
//
// Location:
//   SceXml/CSceResourceListsDocument.h
//
// See Also:
//   CSceResourceList
//
//==============================================================================
class ISceResourceListsDocument : public IEComUnknown
{
//-- Friend Declarations.
//------------------------

//-- New types within class namespace.
//-------------------------------------
public:
protected:
private:

//-- Published Interface.
//------------------------
public:
    //M5T_INTERNAL_USE_BEGIN
    MX_DECLARE_ECOM_GETIID(ISceResourceListsDocument);
    //M5T_INTERNAL_USE_END

    //==SDOC========================================================================
    //==
    //==  AddResourceList
    //==
    //==============================================================================
    //
    //  Summary:
    //      Adds a resource list to the document.
    //
    //  Arguments:
    //      pszListName:
    //          Optional name of the list to create, can be NULL.
    //
    //  Returns:
    //      A pointer to the new element \<list\> or NULL on error.
    //
    //  Description:
    //      Append a new resource list to the resource list doucument.
    //      This method will return an error if either, the resource list element
    //      can not be created or if the list name, an attribute, can not be
    //      appended.
    //      If an error has happened no resource list element will be added to the
    //      document and a NULL pointer will be returned.
    //
    //  See Also:
    //      GetResourceLists
    //
    //
    //==EDOC========================================================================
    virtual CXmlElement* AddResourceList(const char* pszListName = NULL) = 0;

    //==SDOC========================================================================
    //==
    //==  GetResourceLists
    //==
    //==============================================================================
    //
    //  Summary:
    //     Gets all resource list elements held by this document.
    //
    //  Parameters:
    //     rvpLists:
    //      Reference to a vector to be used for return the resource lists found in
    //      the document.
    //
    //  Returns:
    //      resS_OK upon success.
    //      resFE_FAIL otherwise.
    //
    //  Description:
    //      Return the resource lists found in this document.
    //
    //  See Also:
    //      AddResourceList.
    //
    //
    //==EDOC========================================================================
    virtual mxt_result GetResourceLists(OUT CVector<CXmlElement*>& rvpLists) = 0;


//M5T_INTERNAL_USE_BEGIN

//-- Hidden Methods.
//-------------------
protected:
    //-- << Constructors / Destructors / Operators >>
    //------------------------------------------------

    // Summary:
    //  Default Constructor.
    //-----------------------
    ISceResourceListsDocument() {}

    // Summary:
    //  Destructor.
    //--------------
    virtual ~ISceResourceListsDocument() {}


private:
    //-- << Deactivated Constructors / Destructors / Operators >>
    //------------------------------------------------------------

    // Summary:
    //  Copy Constructor.
    //--------------------
    ISceResourceListsDocument(IN const ISceResourceListsDocument& rSrc);

    // Summary:
    //  Assignment Operator.
    //-----------------------
    ISceResourceListsDocument& operator=(IN const ISceResourceListsDocument& rSrc);


//-- Hidden Data Members.
//------------------------
protected:
private:

//M5T_INTERNAL_USE_END

};

//==============================================================================
//====  INLINE METHODS  ========================================================
//==============================================================================

MX_NAMESPACE_END(MXD_GNS)


#endif //-- #ifndef MXG_IRESOURCELISTDOCUMENT_H
