//==SDOC========================================================================
//==============================================================================
//
//      Copyright(c) 2005 M5T Centre d'Excellence en Telecom Inc. ("M5T")
//      Copyright(c) 2007 Media5 Corporation. ("Media5")
//
//  NOTICE:
//   This document contains information that is confidential and proprietary to
//   Media5.
//
//   Media5 reserves all rights to this document as well as to the Intellectual
//   Property of the document and the technology and know-how that it includes
//   and represents.
//
//   This publication cannot be reproduced, neither in whole nor in part, in any
//   form whatsoever without prior written approval by Media5.
//
//   Media5 reserves the right to revise this publication and make changes at
//   any time and without the obligation to notify any person and/or entity of
//   such revisions and/or changes.
//
//==============================================================================
//==EDOC========================================================================
#ifndef MXG_CSIPCOREOUTPUTCONTROLLINGSVC_H
#define MXG_CSIPCOREOUTPUTCONTROLLINGSVC_H

//==============================================================================
//====  INCLUDES + FORWARD DECLARATIONS  =======================================
//==============================================================================


//-- M5T Global definitions
//---------------------------
#ifndef MXG_MXCONFIG_H
#include "Config/MxConfig.h"
#endif

#ifndef MXG_SIPSTACKCFG_H
#include "Config/SipStackCfg.h"
#endif


#ifndef MXD_SIPSTACK_ENABLE_SIP_CORE_OUTPUT_CONTROLLING_SVC_SUPPORT
#error You must define \
MXD_SIPSTACK_ENABLE_SIP_CORE_OUTPUT_CONTROLLING_SVC_SUPPORT to be able to use \
this class.
#endif


//-- Data Members
//-----------------


//-- Parameters used by Value
//-----------------------------


//-- Interface Realized and/or Parent
//-------------------------------------
#ifndef MXG_CECOMDELEGATINGUNKNOWN_H
#include "ECom/CEComDelegatingUnknown.h"
#endif

#ifndef MXG_ISIPCOREOUTPUTCONTROLLINGSVC_H
#include "SipCoreSvc/ISipCoreOutputControllingSvc.h"
#endif

#ifndef MXG_ISIPCONNECTIONSVC_H
#include "SipCore/ISipConnectionSvc.h"
#endif

#ifndef MXG_CSIPREQCTXCONNECTIONSVC_H
#include "SipCore/CSipReqCtxConnectionSvc.h"
#endif


MX_NAMESPACE_START(MXD_GNS)


//-- Forward Declarations
//-------------------------


//==============================================================================
//====  CONSTANTS + DEFINES  ===================================================
//==============================================================================

//==============================================================================
//====  NEW TYPE DEFINITIONS  ==================================================
//==============================================================================

//==SDOC========================================================================
//== Class: CSipCoreOutputControllingSvc
//========================================
//
// Description:
//   This is the implementation of the ISipCoreOutputControllingSvc interface.
//   This service permits the application to update a packet that has been 
//   generated by the stack at the point where the service was added to the 
//   connection service list.
//
// Location:
//   SipCoreSvc/CSipCoreOutputControllingSvc.h
//
// See Also:
//   ISipCoreOutputControllingSvc, ISipCoreOutputControllingMgr
//
//==EDOC========================================================================
class CSipCoreOutputControllingSvc : private CEComDelegatingUnknown,
                                     private ISipCoreOutputControllingSvc,
                                     private ISipConnectionSvc,
                                     private CSipReqCtxConnectionSvc
{
//-- Friend Declarations
//------------------------

    //M5T_INTERNAL_USE_BEGIN
    friend class CSipStackInitializer;
    //M5T_INTERNAL_USE_END


//-- Hidden methods
//-------------------
private:
    //-- << Startup mechanism >>
    //--------------------------------------------

    static mxt_result InitializeCSipCoreOutputControllingSvc();

    static void FinalizeCSipCoreOutputControllingSvc();


    //-- << ECOM mechanism >>
    //--------------------------------------------

    static mxt_result CreateInstance(IN IEComUnknown* pOuterIEComUnknown,
                                     OUT CEComUnknown** ppCEComUnknown);


    //-- << Constructors / Destructors / Operators >>
    //-------------------------------------------------

    // Summary:
    //  Default Constructor.
    //-----------------------
    CSipCoreOutputControllingSvc(IN IEComUnknown& rOuterIEComUnknown);

    // Summary:
    //  Destructor.
    //--------------
    virtual ~CSipCoreOutputControllingSvc();


    //-- << CEComUnknown >>
    //--------------------------------------------

    MX_DECLARE_DELEGATING_IECOMUNKNOWN

    virtual mxt_result NonDelegatingQueryIf(IN mxt_iid iidRequested,
                                            OUT void** ppInterface);


    //-- << ISipCoreOutputControllingSvc >>
    //--------------------------------------------

    // Summary:
    //  Configures the manager associated with this service.
    //-------------------------------------------------------
    virtual mxt_result SetManager(IN ISipCoreOutputControllingMgr* pMgr);

    // Summary:
    //  Tells that the updated packet is ready to be sent after it has been
    //  updated asynchronously by the application.
    //----------------------------------------------------------------------
    virtual mxt_result PacketAsynchronouslyUpdated(IN mxt_opaque opqId,
                                                   IN TO CSipPacket* pPacket,
                                                   IN mxt_result resUpdate);


    //-- << ISipConnectionSvc >>
    //--------------------------------------------

    // Summary:
    //  Obtains an instance of an ISipReqCtxConnectionSvc to attach to a
    //  request context.
    //-------------------------------------------------------------------
    virtual ISipReqCtxConnectionSvc*
                GetReqCtxConnectionSvcInstance(
                                IN const CSipPacket& rPacket,
                                IN ISipConnectionSvc::EDirection eDirection);

    // Summary:
    //  Warns the service that the context is about to be destroyed.
    //---------------------------------------------------------------
    virtual void ClearConnectionSvc();


    //-- << ISipReqCtxConnectionSvc >>
    //--------------------------------------------

    // Summary:
    //  Modifies a packet about to be sent.
    //--------------------------------------
    virtual mxt_result UpdatePacket(IN ISipRequestContext& rRequestContext,
                                    INOUT CSipPacket& rPacket);

    // Summary:
    //  Releases instance or ISipReqCtxConnectionSvc.
    //------------------------------------------------
    virtual void ReleaseReqCtxConnectionSvcInstance(IN ISipRequestContext& rRequestContext);


//-- Hidden Methods
//-------------------
private:
    //-- << Deactivated Constructors / Destructors / Operators >>
    //-------------------------------------------------------------

    // Summary:
    //  Copy Constructor.
    //--------------------
    CSipCoreOutputControllingSvc(IN const CSipCoreOutputControllingSvc& rSrc);

    // Summary:
    //  Assignment Operator.
    //-----------------------
    CSipCoreOutputControllingSvc& operator=(
                                IN const CSipCoreOutputControllingSvc& rSrc);


//-- Hidden Data Members
//------------------------
protected:
private:

    // This is the manager of the service.
    //-------------------------------------
    ISipCoreOutputControllingMgr* m_pMgr;

    // This is the number of active packet updating that are presently
    // processing.
    //-----------------------------------------------------------------
    uint8_t m_uNumberOfActiveUpdate;
};


//==============================================================================
//====  INLINE METHODS  ========================================================
//==============================================================================


MX_NAMESPACE_END(MXD_GNS)

#endif //-- #ifndef MXG_CSIPCOREOUTPUTCONTROLLINGSVC_H

