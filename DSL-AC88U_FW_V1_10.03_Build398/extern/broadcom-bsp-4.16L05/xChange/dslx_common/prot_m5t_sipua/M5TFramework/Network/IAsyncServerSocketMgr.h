//==============================================================================
//==============================================================================
//
//         Copyright(c) 2002 Mediatrix Telecom, Inc. ("Mediatrix")
//         Copyright(c) 2003 M5T Centre d'Excellence en Telecom Inc. ("M5T")
//         Copyright(c) 2007 Media5 Corporation ("Media5")
//
//  NOTICE:
//   This document contains information that is confidential and proprietary to
//   Media5.
//
//   Media5 reserves all rights to this document as well as to the Intellectual
//   Property of the document and the technology and know-how that it includes
//   and represents.
//
//   This publication cannot be reproduced, neither in whole nor in part, in any
//   form whatsoever without prior written approval by Media5.
//
//   Media5 reserves the right to revise this publication and make changes at
//   any time and without the obligation to notify any person and/or entity of
//   such revisions and/or changes.
//
//==============================================================================
//==============================================================================
#ifndef MXG_IASYNCSERVERSOCKETMGR_H
//M5T_INTERNAL_USE_BEGIN
#define MXG_IASYNCSERVERSOCKETMGR_H
//M5T_INTERNAL_USE_END

//==============================================================================
//====  INCLUDES + FORWARD DECLARATIONS  =======================================
//==============================================================================

//-- M5T Global definitions
//---------------------------
#ifndef MXG_MXCONFIG_H
#include "Config/MxConfig.h"
#endif

//-- M5T Framework Configuration
//-------------------------------
#ifndef MXG_FRAMEWORKCFG_H
#include "Config/FrameworkCfg.h" // MXD_NETWORK_ENABLE_SUPPORT
                                 // MXD_ECOM_ENABLE_SUPPORT
#endif

#if defined(MXD_NETWORK_ENABLE_SUPPORT) && \
    defined(MXD_ECOM_ENABLE_SUPPORT)

MX_NAMESPACE_START(MXD_GNS)

//-- Forward Declarations
class IAsyncIoSocket;
class CSocketAddr;

//==============================================================================
//====  CONSTANTS + DEFINES  ===================================================
//==============================================================================

//==============================================================================
//====  NEW TYPE DEFINITIONS  ==================================================
//==============================================================================

//==============================================================================
//== Class: IAsyncServerSocketMgr
//==============================================================================
//<GROUP NETWORK_CLASSES>
//
//  Summary:
//    This is the interface through which server sockets report events.
//
//  Description:
//    This is the interface through which server sockets report events. All
//    events are reported asynchronously with respect to the manager's execution
//    context.
//
//  Location:
//    Network/IAsyncServerSocketMgr.h
//
//  See Also:
//    IAsyncServerSocket
//
//==============================================================================
class IAsyncServerSocketMgr
{
//-- Published Interface
public:
    //==========================================================================
    //==
    //==  EvAsyncServerSocketMgrBound
    //==
    //==========================================================================
    //
    //  Summary:
    //    Notifies that the server socket has been bound.
    //
    //  Parameters:
    //    opq:
    //      Opaque value associated with the socket that is being bound.
    //
    //    pEffectiveLocalAddress:
    //      Effective local address where the socket is bound.
    //
    //  Description:
    //    This is the event generated by the asynchronous server socket upon
    //    being bound.
    //
    //    Unsuccessful binding attempts are reported through the
    //    IAsyncSocketMgr::EvAsyncSocketMgrErrorDetected event.
    //
    //  See Also:
    //    IAsyncSocketMgr::EvAsyncSocketMgrErrorDetected
    //
    //==========================================================================
    virtual void EvAsyncServerSocketMgrBound(IN mxt_opaque opq,
                                             IN CSocketAddr* pEffectiveLocalAddress) = 0;

    //==========================================================================
    //==
    //==  EvAsyncServerSocketMgrConnectionAccepted
    //==
    //==========================================================================
    //
    //  Summary:
    //    The user accepted a connection request and now the accepting process
    //    is complete.
    //
    //  Parameters:
    //    opqServerSocketOpaque:
    //      Opaque value associated with the server socket on which the accept
    //      has been requested.
    //
    //    pAsyncIoSocket:
    //      Pointer to an IAsyncIoSocket interface representing the accepted
    //      connection.
    //
    //  Description:
    //    This event is reported by a server socket when an incoming
    //    connection attempt has been accepted and the accepting process is
    //    complete.
    //
    //  #Deprecation Note:#
    //    The opaque parameter for the accepted socket that used to be a
    //    parameter to this event is now deprecated. To set the opaque value of
    //    an accepted socket, the application must use the
    //    IAsyncSocket::SetOpaque method inside this event. An IAsyncIoSocket
    //    interface is received as a parameter to this event on which the
    //    IAsyncSocket interface can be queried.
    //
    //    Furthermore, the application can also use the socket factory's
    //    IAsyncSocketFactoryConfigurationMgr interface instead to set the
    //    opaque value. See the interface's documentation for more details.
    //
    //  See Also:
    //    IAsyncServerSocket::AcceptA
    //
    //==========================================================================
    virtual void EvAsyncServerSocketMgrConnectionAccepted(IN mxt_opaque opqServerSocketOpaque,
                                                          IN IAsyncIoSocket* pAsyncIoSocket) = 0;

    //==========================================================================
    //==
    //==  EvAsyncServerSocketMgrConnectionFailed
    //==
    //==========================================================================
    //
    //  Summary:
    //    The user accepted a connection request and now the accepting process
    //    failed.
    //
    //  Parameters:
    //    opqServerSocketOpaque:
    //      Opaque value associated with the server socket on which the accept
    //      was requested.
    //
    //    res:
    //      The error detected on the socket.
    //
    //  Description:
    //    This event is reported by a server socket when an incoming
    //    connection attempt has been accepted and the accepting process failed.
    //
    //  #Deprecation Note:#
    //    The opaque parameter that used to be a parameter to this method is now
    //    deprecated. The opaque value of an accepted socket is now set only
    //    when the application receives the
    //    IAsyncServerSocketMgr::EvAsyncServerSocketMgrConnectionAccepted event
    //    and uses the IAsyncSocket::SetOpaque method or the socket factory'
    //    IAsyncSocketFactoryConfigurationMgr interface. This event being
    //    exclusive with the
    //    IAsyncServerSocketMgr::EvAsyncServerSocketMgrConnectionAccepted event,
    //    it no longer has access to the opaque value of the accepted socket nor
    //    does it need that opaque value.
    //
    //  See Also:
    //    IAsyncServerSocket::AcceptA
    //
    //==========================================================================
    virtual void EvAsyncServerSocketMgrConnectionFailed(IN mxt_opaque opqServerSocketOpaque,
                                                        IN mxt_result res) = 0;

    //==========================================================================
    //==
    //==  EvAsyncServerSocketMgrConnectionRequested
    //==
    //==========================================================================
    //
    //  Summary:
    //    An incoming connection attempt was detected on a server socket.
    //
    //  Parameters:
    //    opqServerSocketOpaque:
    //      Opaque parameter associated with the server socket.
    //
    //  Description:
    //    This event is reported by a server socket when an incoming
    //    connection attempt is detected. In order to correctly establish the
    //    incoming connection, IAsyncServerSocket::AcceptA must be called on the
    //    server socket.
    //
    //  See Also:
    //    IAsyncServerSocket::AcceptA
    //
    //==========================================================================
    virtual void EvAsyncServerSocketMgrConnectionRequested(IN mxt_opaque opqServerSocketOpaque) = 0;

//M5T_INTERNAL_USE_BEGIN
protected:
    //==========================================================================
    //==
    //==  IAsyncServerSocketMgr
    //==
    //==========================================================================
    //
    //  Summary:
    //    Constructor.
    //
    //  Description:
    //    Default Constructor.
    //
    //==========================================================================
    IAsyncServerSocketMgr(){};

    //==========================================================================
    //==
    //==  ~IAsyncServerSocketMgr
    //==
    //==========================================================================
    //
    //  Summary:
    //    Destructor.
    //
    //  Description:
    //    Destructor.
    //
    //==========================================================================
    virtual ~IAsyncServerSocketMgr(){};

private:
    // Deactivated Constructors / Destructors / Operators
    IAsyncServerSocketMgr(const IAsyncServerSocketMgr& from);
    IAsyncServerSocketMgr& operator=(const IAsyncServerSocketMgr& from);
//M5T_INTERNAL_USE_END
};

MX_NAMESPACE_END(MXD_GNS)

#endif // #if defined(MXD_NETWORK_ENABLE_SUPPORT) &&
       //     defined(MXD_ECOM_ENABLE_SUPPORT)

#endif // MXG_IASYNCSERVERSOCKETMGR_H
