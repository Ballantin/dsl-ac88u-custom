//==============================================================================
//==============================================================================
//
//   Copyright(c) 2003 M5T Centre d'Excellence en Telecom Inc. ("M5T")
//   Copyright(c) 2007 Media5 Corporation (“Media5”)
//
//  NOTICE:
//   This document contains information that is confidential and proprietary to
//   Media5.
//
//   Media5 reserve all rights to this document as well as to the
//   Intellectual Property of the document and the technology and know-how that
//   it includes and represents.
//
//   This publication cannot be reproduced, neither in whole nor in part, in any
//   form whatsoever, without prior written approval by Media5.
//
//   Media5 reserve the right to revise this publication and make
//   changes at any time and without the obligation to notify any person and/or
//   entity of such revisions and/or changes.
//
//==============================================================================
//==============================================================================
#ifndef MXG_IASYNCTLSSOCKETMGR_H
//M5T_INTERNAL_USE_BEGIN
#define MXG_IASYNCTLSSOCKETMGR_H
//M5T_INTERNAL_USE_END

//==============================================================================
//====  INCLUDES + FORWARD DECLARATIONS  =======================================
//==============================================================================

//-- M5T Global definitions
//---------------------------
#ifndef MXG_MXCONFIG_H
#include "Config/MxConfig.h"
#endif

//-- Data Members
//-----------------

//-- Parameters used by Value
//-----------------------------

//-- Interface Realized and/or Parent
//-------------------------------------

MX_NAMESPACE_START(MXD_GNS)

//-- Forward Declarations
//-------------------------
class CCertificateChain;
class CTlsSession;
class IAsyncTlsSocket;

//==============================================================================
//====  CONSTANTS + DEFINES  ===================================================
//==============================================================================

//==============================================================================
//====  NEW TYPE DEFINITIONS  ==================================================
//==============================================================================

//==============================================================================
//== Class: IAsyncTlsSocketMgr
//========================================
//<GROUP TLS_CLASSES>
//
// Summary:
//   This is the interface through which the asynchronous TLS sockets report
//   their events.
//
// Description:
//   This is the interface through which the asynchronous TLS sockets report
//   their events. All events are reported asynchronously with respect to the
//   manager's execution context.
//
// Location:
//   Tls/IAsyncTlsSocketMgr.h
//
// See Also:
//
//==============================================================================
class IAsyncTlsSocketMgr
{
//-- Published Interface
public:
    //==========================================================================
    //==
    //==  EvAsyncTlsSocketMgrTlsHandshakingCompletedAwaitingApproval
    //==
    //==========================================================================
    //
    //  Summary:
    //      Notifies that the TLS handskaking is completed and gives the manager
    //      the opportunity to do some more validation prior to
    //      IAsyncClientSocketMgr::EvAsyncClientSocketMgrConnected or
    //      IAsyncServerSocketMgr::EvAsyncServerSocketMgrConnectionAccepted
    //      notifications.
    //
    //  Parameters:
    //    opq:
    //      Opaque value associated with the socket.
    //
    //    pPeerCertificateChain:
    //      The certificates just received from the peer. The manager must
    //      create a copy of the certificate chain if it wants to keep it.
    //
    //    pAsyncTlsSocket:
    //      Pointer to an IAsyncTlsSocket interface representing the socket.
    //
    //  Description:
    //      This is the event generated by an asynchronous TLS handskake
    //      completion. It is a mean for the manager to do more specific
    //      validations on the peer credentials.
    //
    //  See also:
    //      IAsyncClientSocketMgr::EvAsyncClientSocketMgrConnected,
    //      IAsyncServerSocketMgr::EvAsyncServerSocketMgrConnectionAccepted
    //
    //==========================================================================
    virtual void EvAsyncTlsSocketMgrTlsHandshakingCompletedAwaitingApproval
                    (IN mxt_opaque opq,
                     IN const CCertificateChain* pPeerCertificateChain,
                     IN IAsyncTlsSocket* pAsyncTlsSocket) = 0;

    //==========================================================================
    //==
    //==  EvAsyncTlsSocketMgrNewTlsSession
    //==
    //==========================================================================
    //
    //  Summary:
    //      Notifies of the chosen session parameters.
    //
    //  Parameters:
    //    opq:
    //      Opaque value associated with the socket.
    //
    //    pTlsSession:
    //      A pointer to a session description class. The user must never keep
    //      a reference to this object. It must create a copy of the underlying
    //      object if it wants to keep it.
    //
    //  Description:
    //      This is the event generated by an asynchronous TLS handskake
    //      completion. It is a means to publish current session descriptions.
    //      Only the entity acting as the TLS client side receives this event.
    //
    //==========================================================================
    virtual void EvAsyncTlsSocketMgrNewTlsSession(IN mxt_opaque opq,
                                                  IN const CTlsSession* pTlsSession) = 0;

//M5T_INTERNAL_USE_BEGIN
//-- Hidden Methods
protected:
    //-- << Constructors / Destructors / Operators >>

    //==========================================================================
    //==
    //==  IAsyncTlsSocketMgr
    //==
    //==========================================================================
    //
    //  Summary:
    //   Constructor
    //
    //  Description:
    //   Constructor
    //
    //==========================================================================
    IAsyncTlsSocketMgr(){};

    //==========================================================================
    //==
    //==  ~IAsyncTlsSocketMgr
    //==
    //==========================================================================
    //
    //  Summary:
    //   Destructor
    //
    //  Description:
    //   Destructor
    //
    //==========================================================================
    virtual ~IAsyncTlsSocketMgr(){};

private:
    //-- << Deactivated Constructors / Destructors / Operators >>
    IAsyncTlsSocketMgr(IN const IAsyncTlsSocketMgr& rSrc);
    IAsyncTlsSocketMgr& operator=(IN const IAsyncTlsSocketMgr& rSrc);
//M5T_INTERNAL_USE_END
};

MX_NAMESPACE_END(MXD_GNS)

#endif // MXG_IASYNCCLIENTSOCKETMGR_H

