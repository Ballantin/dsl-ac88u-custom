/***************************************************************************
*    Copyright 2000  Broadcom
*    All Rights Reserved
*    No portions of this material may be reproduced in any form without the
*    written permission of:
*             Broadcom
*             16215 Alton Parkway
*             P.O. Box 57013
*             Irvine, California 92619-7013
*    All information contained in this document is Broadcom
*    company private, proprietary, and trade secret.
*
****************************************************************************
*
*    Filename: sme.h
*
****************************************************************************
*    Description:
*
*     This header file contains the definitions of all global functions
*     provided by the State Machine Engine.
*
****************************************************************************/

#ifndef SME_H
#define SME_H

/* ---- Include Files ---------------------------------------- */

/* ---- Constants and Types ---------------------------------- */

/***********************************************************************
*
*  SME_EV_NULL - NULL Event to indicate end of event list and no
*                internal events.
*
***********************************************************************/
#define SME_EVENT_NULL  -1


/***********************************************************************
*
*  SME_MAX_FUNC - Maximum number of action functions for a transition.
*
***********************************************************************/
#define SME_MAX_FUNC    3


/***********************************************************************
*
*  SME_EVENT - event that triggers an state transition.
*
***********************************************************************/
typedef int SME_EVENT;


/***********************************************************************
*
*  SME_FUNC - Action function to be called during state transition.
*
*  PARAMETERS:
*     datap       - [IN/OUT] pointer to user data for the state machine.
*
*  RETURNS:
*     int - internal event generated by the action.  return SME_EV_NULL
*           if no internal event is generated.
*
***********************************************************************/
typedef SME_EVENT (*SME_FUNC) (void * datap);


/***********************************************************************
*
*  SME_STATE - An entry in the state table for handling single event.
*
*  MEMBERS:
*     event       - event number, use SME_EV_NULL to terminate list of
*                   events in state table
*     nextstatep  - pointer to next state's table
*     action      - list of action functions to be called
*
***********************************************************************/
typedef struct SME_STATE
{
   SME_EVENT                event; /* event number, use SME_EV_NULL to terminate */
   const struct SME_STATE  *nextstatep;
   SME_FUNC                 action[SME_MAX_FUNC];
} SME_STATE;

#if defined(__cplusplus)
extern "C"
{
#endif

/* ---- Variable Externs ------------------------------------- */

/* ---- Function Prototypes ---------------------------------- */

/* sme.c - state machine engine functions */
const SME_STATE *smeProcess(const SME_STATE *statep,
                            void            *datap,
                            SME_EVENT        event,
                            int             *transitions);

#if defined(__cplusplus)
}
#endif

#endif   /* SME_H */
